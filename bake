#!/bin/bash
# bake [-v]

verbose=
while getopts “v” option; do
  case $option in
    v)
      verbose=1
      ;;
  esac
done

run_file() {
  bake_file=`find_file`
  if [ -n "$bake_file" ]; then
    bake_script=`mktemp -t bake_tmp.XXX`
    while read -r line; do
      echo "$line" >> $bake_script
    done <<< "`cat $bake_file`"
    if [[ -n $verbose ]]; then
      cat $bake_script | bash --verbose
    else
      cat $bake_script | bash
    fi
    rm $bake_script
  else
    echo "bake: Aborted. No Bakefile found."
  fi
}

# Looks for the nearest Bakefile in the current directory and its parent
# directories
find_file() {
  # Loop until a Bakefile is found or / is reached
  while true; do

    # If there is a Bakefile here, echo its path and return
    if [ -f Bakefile ]; then
      # TODO: Fix a bug where a Bakefile in / has a path of "//Bakefile"
      echo `pwd`/Bakefile
      return
    # Else if we have looked through all the parent directories, return
    elif [ `pwd` == "/" ]; then
      return
    # Otherwise, cd into the parent directory and keep looping
    else
      cd ..
    fi

  done
}

run_file
